<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HTML入门教程：第2篇 | 创建超链接与图像</title>
      <link href="/2023/10/02/"/>
      <url>/2023/10/02/</url>
      
        <content type="html"><![CDATA[<p>在<a href="https://zigaow.com/2023/10/01/">上一篇教程</a>中，我们介绍了HTML的基础概念和常见标签。现在，让我们继续深入学习HTML，学会如何创建超链接和插入图像，这些是构建互联网上信息丰富页面的关键元素。</p><h2 id="创建超链接"><a href="#创建超链接" class="headerlink" title="创建超链接"></a>创建超链接</h2><p>超链接（Hyperlink）是将不同网页或网页内的不同部分相互连接的一种方式。在HTML中，我们使用<code>&lt;a&gt;</code>标签来创建超链接。以下是创建超链接的基本语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;目标链接&quot;</span>&gt;</span>链接文本<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>href</code> 属性定义了链接的目标，可以是另一个网页的URL，也可以是文件的路径。</li><li>链接文本是用户在页面上看到的可点击文本。</li></ul><h3 id="外部链接"><a href="#外部链接" class="headerlink" title="外部链接"></a>外部链接</h3><p>要创建指向外部网页的链接，只需将目标URL放在<code>href</code>属性中，如下所示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.example.com&quot;</span>&gt;</span>访问示例网站<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="内部链接"><a href="#内部链接" class="headerlink" title="内部链接"></a>内部链接</h3><p>如果你想在同一网站内链接到另一个页面，可以使用相对路径。假设你有一个名为<code>about.html</code>的页面，位于与当前页面相同的目录中，你可以这样创建内部链接：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;about.html&quot;</span>&gt;</span>关于我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="在新窗口中打开链接"><a href="#在新窗口中打开链接" class="headerlink" title="在新窗口中打开链接"></a>在新窗口中打开链接</h3><p>有时，你可能希望链接在新窗口或标签页中打开，而不是在当前窗口中。为了实现这一点，可以使用<code>target</code>属性：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.example.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>在新窗口中打开链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>target=&quot;_blank&quot;</code>告诉浏览器在新窗口中打开链接。</p><h2 id="插入图像"><a href="#插入图像" class="headerlink" title="插入图像"></a>插入图像</h2><p>插入图像是丰富网页内容的关键之一。在HTML中，我们可以使用<code>&lt;img&gt;</code>标签来插入图像，并可以通过属性来设置图像的宽度（<code>width</code>）和高度（<code>height</code>）。</p><p>以下是更详细的图像插入语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图像路径&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;替代文本&quot;</span> <span class="attr">width</span>=<span class="string">&quot;宽度&quot;</span> <span class="attr">height</span>=<span class="string">&quot;高度&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>src</code> 属性定义了图像的路径，可以是相对路径或绝对URL。</li><li><code>alt</code> 属性用于提供图像的替代文本，当图像无法加载时，替代文本将显示。</li><li><code>width</code> 属性定义了图像的宽度，以像素（px）为单位。</li><li><code>height</code> 属性定义了图像的高度，以像素（px）为单位。</li></ul><h3 id="插入本地图像"><a href="#插入本地图像" class="headerlink" title="插入本地图像"></a>插入本地图像</h3><p>如果图像位于与HTML文件相同的目录中，可以使用相对路径插入图像，并设置宽度和高度：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;my-image.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;我的图片&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">height</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="插入远程图像"><a href="#插入远程图像" class="headerlink" title="插入远程图像"></a>插入远程图像</h3><p>要插入来自远程服务器的图像，只需提供图像的完整URL，并设置宽度和高度：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://www.example.com/images/my-image.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;我的图片&quot;</span> <span class="attr">width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过设置宽度和高度属性，你可以控制图像在页面上的显示尺寸，确保图像在不失真的情况下适应页面布局。</p><h2 id="实际示例"><a href="#实际示例" class="headerlink" title="实际示例"></a>实际示例</h2><p>现在，让我们通过实际示例来演示创建超链接和插入图像。</p><iframe width="100%" height="400" src="//jsrun.net/MqxKp/embedded/html,result/light" allowfullscreen="allowfullscreen" frameborder="0"></iframe><p>以上示例中，我们创建了两个超链接分别指向外部网站和内部页面，并插入了一张远程图像。你可以根据需要修改链接的目标URL和图像的路径。</p><p>希望这篇教程对你有所帮助。如果你需要进一步的指导或有其他问题，请随时用邮件联系我：<a href="mailto:&#x7a;&#x40;&#122;&#105;&#103;&#97;&#x6f;&#46;&#x78;&#x79;&#122;">&#x7a;&#x40;&#122;&#105;&#103;&#97;&#x6f;&#46;&#x78;&#x79;&#122;</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> 分享 </tag>
            
            <tag> HTML </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杭州亚运会田径比赛集锦视频</title>
      <link href="/2023/10/01/"/>
      <url>/2023/10/01/</url>
      
        <content type="html"><![CDATA[<p>首先先祝大家国庆节快乐！<br>今天我陪爸爸妈妈去看了杭州亚运会的田径比赛，拍了很多视频，做了以下集锦视频，希望大家喜欢！</p><script src="https://cdn.jsdelivr.net/npm/hls.js@latest"></script><p><video id="video" autoplay="false" controls loop="false" width="100%"></video></p><script>  var video = document.getElementById('video');  if(Hls.isSupported()) {  var hls = new Hls();  hls.loadSource('https://cdn.jsdelivr.net/gh/ZigaoWang/vid/231001/index.m3u8');  hls.attachMedia(video);  hls.on(Hls.Events.MANIFEST_PARSED,function() {  video.play();});} else if (video.canPlayType('application/vnd.apple.mpegurl')) {  video.src = 'https://cdn.jsdelivr.net/gh/ZigaoWang/vid/231001/index.m3u8';  video.addEventListener('loadedmetadata',function() {  video.play();});}</script>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 体育 </tag>
            
            <tag> 视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML入门教程：第1篇 | 基础概念与常见标签</title>
      <link href="/2023/09/30/"/>
      <url>/2023/09/30/</url>
      
        <content type="html"><![CDATA[<p><img src="https://zigao.wang/blog/post/230930/p1.jpeg" alt="HTML图片"></p><p>学习HTML（Hypertext Markup Language）是迈向Web开发世界的第一步。HTML是一种标记语言，用于创建网页的结构和内容。为什么要学习HTML呢？</p><ol><li><p><strong>创建网页</strong>：学习HTML让你能够构建自己的网页，分享信息，展示作品，或推广业务。</p></li><li><p><strong>理解网页</strong>：HTML帮助你深入了解Web页面的结构和组织方式，为学习其他Web技术打下基础。</p></li><li><p><strong>为Web开发铺路</strong>：HTML是Web开发的起点，是学习CSS、JavaScript等其他技术的前提。</p></li></ol><p>在本教程中，我们将详细介绍HTML的基础，提供实例，帮助你快速入门，准备好探索Web开发的更多领域。开始吧，迎接Web开发之旅的挑战！</p><h2 id="HTML是什么？"><a href="#HTML是什么？" class="headerlink" title="HTML是什么？"></a>HTML是什么？</h2><p>HTML是一种标记语言，它由一系列的标签（tag）组成，每个标签都用于定义网页上的不同元素。HTML标签通常是成对出现的，包括一个开始标签和一个结束标签。开始标签用于定义元素的起始位置，而结束标签用于定义元素的结束位置。例如，以下是一个基本的HTML文档结构：</p><iframe width="100%" height="300" src="//jsrun.net/aqxKp/embedded/html,result/light" allowfullscreen="allowfullscreen" frameborder="0"></iframe><h2 id="基本的HTML结构"><a href="#基本的HTML结构" class="headerlink" title="基本的HTML结构"></a>基本的HTML结构</h2><p>上面的示例是一个最小的HTML文档结构，包括以下几个部分：</p><ul><li><code>&lt;!DOCTYPE html&gt;</code>：这是文档类型声明，它告诉浏览器使用HTML5标准来解析文档。</li><li><code>&lt;html&gt;</code>：这是HTML文档的根元素，包含了整个文档的内容。</li><li><code>&lt;head&gt;</code>：这是文档头部部分，通常包含了文档的元信息，如标题、字符集声明等。</li><li><code>&lt;title&gt;</code>：这是文档的标题，显示在浏览器的标签栏上。</li><li><code>&lt;body&gt;</code>：这是文档的主体部分，包含了网页的实际内容，如文本、图像和链接。</li><li><code>&lt;h1&gt;</code>：这是一个标题标签，用于定义一级标题。</li><li><code>&lt;p&gt;</code>：这是一个段落标签，用于定义段落文本。</li></ul><h2 id="HTML标签和元素"><a href="#HTML标签和元素" class="headerlink" title="HTML标签和元素"></a>HTML标签和元素</h2><p>HTML标签定义了文档中的不同元素，每个元素都有不同的含义和用途。下面是一些常见的HTML标签和它们的示例用法：</p><h3 id="文本标签"><a href="#文本标签" class="headerlink" title="文本标签"></a>文本标签</h3><ul><li><code>&lt;h1&gt;</code> 到 <code>&lt;h6&gt;</code>：用于定义标题，<code>&lt;h1&gt;</code> 表示最高级别的标题。</li><li><code>&lt;p&gt;</code>：用于定义段落文本。</li><li><code>&lt;a&gt;</code>：用于创建链接，可以跳转到其他网页或文件。</li><li><code>&lt;strong&gt;</code>：用于强调文本，通常会使文本加粗显示。</li><li><code>&lt;em&gt;</code>：用于强调文本，通常会使文本斜体显示。</li></ul><iframe width="100%" height="150" src="//jsrun.net/NqxKp/embedded/html,result/light" allowfullscreen="allowfullscreen" frameborder="0"></iframe><h3 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h3><ul><li><code>&lt;ul&gt;</code>：用于创建无序列表。</li><li><code>&lt;ol&gt;</code>：用于创建有序列表。</li><li><code>&lt;li&gt;</code>：用于定义列表项。</li></ul><iframe width="100%" height="250" src="//jsrun.net/UqxKp/embedded/html,result/light" allowfullscreen="allowfullscreen" frameborder="0"></iframe><h3 id="图像标签"><a href="#图像标签" class="headerlink" title="图像标签"></a>图像标签</h3><ul><li><code>&lt;img&gt;</code>：用于插入图像。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;image.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图片描述&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h3><ul><li><code>&lt;table&gt;</code>：用于创建表格。</li><li><code>&lt;tr&gt;</code>：用于定义表格的行。</li><li><code>&lt;td&gt;</code>：用于定义表格的数据单元格。</li><li><code>&lt;thead&gt;</code> 用于定义表格的标题部分。</li><li><code>&lt;tbody&gt;</code> 用于定义表格的主体部分。</li></ul><iframe width="100%" height="500" src="//jsrun.net/9qxKp/embedded/html,result/light" allowfullscreen="allowfullscreen" frameborder="0"></iframe><h2 id="HTML注释"><a href="#HTML注释" class="headerlink" title="HTML注释"></a>HTML注释</h2><p>在HTML中，你可以使用注释来添加对代码的说明，注释不会在浏览器中显示，但对于开发者来说很有用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这是一个注释 --&gt;</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个入门教程涵盖了HTML的基本概念和常见标签。随着你的学习深入，你将能够构建更复杂的网页和Web应用程序。请继续学习HTML，探索更多标签和属性，以扩展你的Web开发技能。希望这个教程能帮助你入门HTML并启动你的Web开发之旅！</p><p>第二篇已出，点击<a href="https://zigaow.com/2023/10/02/">这里</a>查看！</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> 分享 </tag>
            
            <tag> HTML </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS 美化：更改软件图标，解决强迫症！</title>
      <link href="/2023/09/28/"/>
      <url>/2023/09/28/</url>
      
        <content type="html"><![CDATA[<h2 id="为什么我要更换图标？"><a href="#为什么我要更换图标？" class="headerlink" title="为什么我要更换图标？"></a>为什么我要更换图标？</h2><p>看到Launchpad和任务栏上的各个软件的图标有各种大小形状的图形让我很难受，强迫症来了！<br>以下是一些示例图标，看起来相当混乱吧（我在修改之前没有保存原图标，只能从网上找到这些）：</p><p><img src="https://zigao.wang/blog/post/230928/before1.jpg" alt="Before 1"><br><img src="https://zigao.wang/blog/post/230928/before2.jpg" alt="Before 2"></p><p>现在看看我美化后的效果：</p><p><img src="https://zigao.wang/blog/post/230928/change.png" alt="Change"><br><img src="https://zigao.wang/blog/post/230928/after1.png" alt="After 1"><br><img src="https://zigao.wang/blog/post/230928/after2.png" alt="After 2"></p><p>注：以上图片转自<a href="https://ohevan.com/macos-change-icons.html">https://ohevan.com/macos-change-icons.html</a>。</p><p>这样一来，界面瞬间变得清爽许多，而且几乎所有应用程序图标都符合macOS的设计风格。</p><h2 id="下载图标"><a href="#下载图标" class="headerlink" title="下载图标"></a>下载图标</h2><p>在网上浏览时，我找到了一个制作精美图标的大神制作的网站，名为macOSicons。</p><p><img src="https://zigao.wang/blog/post/230928/website.png" alt="Website"></p><p>网址：<a href="https://macosicons.com/">https://macosicons.com/</a></p><p>这个网站上包含了许多精美的软件图标，搜索软件名称，点击你喜欢的样式，下载下来。</p><h2 id="更换方法"><a href="#更换方法" class="headerlink" title="更换方法"></a>更换方法</h2><p>首先，找到您要更换图标的应用程序，右键单击并选择“获取详细信息”。</p><p><img src="https://zigao.wang/blog/post/230928/info.png" alt="Info"></p><p>然后，找到您下载的图标文件，将其拖放到左上角的图标上。</p><p><img src="https://zigao.wang/blog/post/230928/drag.png" alt="Drag"></p><p>将所有图标都更换一遍，就能实现统一的效果。</p><h2 id="收尾"><a href="#收尾" class="headerlink" title="收尾"></a>收尾</h2><p>好了！你还强迫症吗？今天的文章就到这里，希望对你有帮助，我们下篇再见！</p>]]></content>
      
      
      <categories>
          
          <category> 知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> 分享 </tag>
            
            <tag> macOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页计算器项目DazCalc终于做完了！</title>
      <link href="/2023/08/31/"/>
      <url>/2023/08/31/</url>
      
        <content type="html"><![CDATA[<p><img src="https://zigao.wang/blog/post/230831/p1.png" alt="图片"></p><h2 id="网站链接"><a href="#网站链接" class="headerlink" title="网站链接"></a>网站链接</h2><p>如果你想要查看我的成果，请点击<a href="https://zigaow.com/dazcalc">这里</a>。<br>如果你想要使用浏览器插件，请点击<a href="https://chromewebstore.google.com/detail/dazcalc/gmifbolahkfmhjnkoifcbbodidfcdjhb">这里</a>（中国大陆地区可能无法访问）。<br>GitHub仓库：<a href="https://github.com/ZigaoWang/dazcalc">https://github.com/ZigaoWang/dazcalc</a></p><h2 id="项目动机"><a href="#项目动机" class="headerlink" title="项目动机"></a>项目动机</h2><p>暑假马上要结束了，所以我在最后的时间做了一个网页计算器项目，取名为DazCalc。其实我这个项目很早就做完了，可是原来的老版本用的是px写的，在一些大一点或小一点的屏幕就错位了。因此，我最近从新用vh写了一遍。</p><h2 id="时间投入"><a href="#时间投入" class="headerlink" title="时间投入"></a>时间投入</h2><p>我每天投入了大约半小时的时间来开发这个项目，共花费了三天的时间来完成它。</p><h2 id="收尾"><a href="#收尾" class="headerlink" title="收尾"></a>收尾</h2><p>最后，希望大家喜欢我的DazCalc待办列表项目！如果你有任何建议或意见，都欢迎随时与我分享。我会继续努力改进和扩展这个项目，让它变得更加实用和用户友好。谢谢大家的支持和关注！</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用GitHub自建视频床</title>
      <link href="/2023/07/20/"/>
      <url>/2023/07/20/</url>
      
        <content type="html"><![CDATA[<p>有很多人想要把自己做的视频放到网上，可是发现各种云服务器或流量的价格太贵了。这时候，就可以用免费，可靠的GitHub来自建视频床，就是一种将视频文件存储在GitHub仓库中，并通过链接在博客或网站中嵌入视频的方法。下面是详细的操作步骤：</p><h2 id="步骤-1-创建GitHub仓库"><a href="#步骤-1-创建GitHub仓库" class="headerlink" title="步骤 1: 创建GitHub仓库"></a>步骤 1: 创建GitHub仓库</h2><ol><li>登录GitHub并点击右上角的加号按钮，选择”New repository”创建一个新的仓库。</li><li>给仓库起一个名称，设置为公开（Public）并选择其他适当的选项。然后点击”Create repository”创建仓库。</li></ol><h2 id="步骤-2-安装ffmpeg"><a href="#步骤-2-安装ffmpeg" class="headerlink" title="步骤 2: 安装ffmpeg"></a>步骤 2: 安装ffmpeg</h2><p>因为GitHub单个文件的上传限制是25MB，所以我们需要把视频切片成多个文件来上传。这个时候，我们需要安装使用<code>ffmpeg</code>。</p><p>如果你使用的是macOS，在终端中运行以下命令来安装ffmpeg：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install ffmpeg</span><br></pre></td></tr></table></figure><p>如果你使用的是其他操作系统，请自行查找并安装ffmpeg工具。</p><h2 id="步骤-3-视频文件切片"><a href="#步骤-3-视频文件切片" class="headerlink" title="步骤 3: 视频文件切片"></a>步骤 3: 视频文件切片</h2><p>在终端中，使用以下命令将视频文件切片成HLS格式（.m3u8和.ts文件）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i <span class="string">&#x27;视频文件名称&#x27;</span> -c:v h264 -flags +cgop -g 30 -hls_time 5 -hls_list_size 0 -hls_segment_filename index%3d.ts <span class="string">&#x27;index.m3u8&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><code>-c:v h264</code>: 使用H.264视频编码。</li><li><code>-hls_time 5</code>: 设置每个切片的时长为5秒，你可以根据需要进行调整。</li><li><code>-hls_list_size 0</code>: 设置.m3u8播放列表的大小，0表示不限制大小。 </li><li><code>-hls_segment_filename index%3d.ts</code>: 设置.ts切片文件的命名规则。</li></ul><p>切片完成后，将生成的.m3u8和.ts文件保存到一个文件夹中，以便后续管理。</p><h2 id="步骤-4-将切片上传到GitHub仓库"><a href="#步骤-4-将切片上传到GitHub仓库" class="headerlink" title="步骤 4: 将切片上传到GitHub仓库"></a>步骤 4: 将切片上传到GitHub仓库</h2><ol><li>将切片文件夹中的所有文件添加到你的GitHub仓库中。</li><li>提交更改并将切片文件推送到GitHub仓库。</li></ol><h2 id="步骤-5-获取视频链接"><a href="#步骤-5-获取视频链接" class="headerlink" title="步骤 5: 获取视频链接"></a>步骤 5: 获取视频链接</h2><p>你的.m3u8使用jsd加速的链接格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/用户名/仓库名/文件夹名/index.m3u8</span><br></pre></td></tr></table></figure><h2 id="步骤-6-插入视频到博客中"><a href="#步骤-6-插入视频到博客中" class="headerlink" title="步骤 6: 插入视频到博客中"></a>步骤 6: 插入视频到博客中</h2><ol><li><p>在你的博客文章中，使用以下代码来嵌入视频：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/hls.js@latest&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">&quot;video&quot;</span> <span class="attr">controls</span> <span class="attr">loop</span>=<span class="string">&quot;false&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> video = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;video&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span> (<span class="title class_">Hls</span>.<span class="title function_">isSupported</span>()) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> hls = <span class="keyword">new</span> <span class="title class_">Hls</span>();</span></span><br><span class="line"><span class="language-javascript">    hls.<span class="title function_">loadSource</span>(<span class="string">&#x27;m3u8视频地址&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    hls.<span class="title function_">attachMedia</span>(video);</span></span><br><span class="line"><span class="language-javascript">    hls.<span class="title function_">on</span>(<span class="title class_">Hls</span>.<span class="property">Events</span>.<span class="property">MANIFEST_PARSED</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      video.<span class="title function_">play</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (video.<span class="title function_">canPlayType</span>(<span class="string">&#x27;application/vnd.apple.mpegurl&#x27;</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript">    video.<span class="property">src</span> = <span class="string">&#x27;m3u8视频地址&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    video.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadedmetadata&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      video.<span class="title function_">play</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>将上述代码中的<code>m3u8视频地址</code>替换为你在步骤5中获取的.m3u8链接。</p></li></ol><p>通过以上步骤，你可以将视频文件存储在GitHub仓库中，并在博客中嵌入使用HLS.js进行播放的视频。确保仓库和视频文件是公开可访问的，以便他人能够观看你的视频。<br>希望这篇文章对你有帮助，如果遇到任何问题，请随时联系我，谢谢！</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页待办列表DazCheck终于上线了！</title>
      <link href="/2023/06/10/"/>
      <url>/2023/06/10/</url>
      
        <content type="html"><![CDATA[<p><img src="https://zigao.wang/blog/post/230610/p1.png" alt="图片1"><br><img src="https://zigao.wang/blog/post/230610/p2.png" alt="图片2"></p><h2 id="网站链接"><a href="#网站链接" class="headerlink" title="网站链接"></a>网站链接</h2><p>如果你想要查看我的成果，请点击<a href="https://zigaow.com/dazcheck">这里</a>。<br>如果你想要使用浏览器插件，请点击<a href="https://chromewebstore.google.com/detail/dazcheck/jhkglpiffjbeanebmbbceoajfinekgom">这里</a>（中国大陆地区可能无法访问）。<br>GitHub仓库链接：<a href="https://github.com/ZigaoWang/dazcheck">https://github.com/ZigaoWang/dazcheck</a></p><h2 id="项目动机"><a href="#项目动机" class="headerlink" title="项目动机"></a>项目动机</h2><p>最近，我马上要放暑假，并在期末考试复习完了。提前复习完后，我有了一些空闲时间，想要练习我的HTML、CSS和JS技能，于是决定做一个项目。我问了ChatGPT一些建议，最终选择了制作一个待办事项网站，将其打造成了一个浏览器插件。</p><h2 id="什么是待办事项？"><a href="#什么是待办事项？" class="headerlink" title="什么是待办事项？"></a>什么是待办事项？</h2><p>简而言之，待办事项就是一个列表，用于列举你需要完成的工作任务。例如：完成地理作业、跑步半小时、阅读等等。</p><h2 id="时间投入"><a href="#时间投入" class="headerlink" title="时间投入"></a>时间投入</h2><p>我每天投入了半小时的时间来开发这个项目，共花费了一周的时间来完成它。</p><h2 id="收尾"><a href="#收尾" class="headerlink" title="收尾"></a>收尾</h2><p>最后，希望大家喜欢我的DazCheck待办列表项目！如果你有任何建议或意见，都欢迎随时与我分享。我会继续努力改进和扩展这个项目，让它变得更加实用和用户友好。谢谢大家的支持和关注！</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试：第一页！</title>
      <link href="/2022/12/20/"/>
      <url>/2022/12/20/</url>
      
        <content type="html"><![CDATA[<p>终于把博客网站做好了！今天上线了，记住网址：<a href="zigaow.com">zigaow.com</a>。以下是测试：</p><p><em>测试</em><br><strong>测试</strong><br><em><strong>测试</strong></em></p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><h2 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h2><h3 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><blockquote><p>Quote 测试</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
